import { UsersService } from './users.service';
import { UpdateProfileDto } from './dto/update-profile.dto';
import { ChangePasswordDto } from './dto/change-password.dto';
import { CreateAddressDto, UpdateAddressDto } from './dto/address.dto';
export declare class UsersController {
    private readonly usersService;
    constructor(usersService: UsersService);
    getCurrentUser(req: any): Promise<{
        id: string;
        email: string;
        phoneNumber: string;
        occupation: string;
        country: string;
        socialMediaHandles: string[];
        fullName: string;
        name: string;
        password: string;
        refreshToken: string;
        avatar: string;
        isUserBan: boolean;
        isAdmin: boolean;
        isVendor: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    updateProfile(req: any, updateProfileDto: UpdateProfileDto): Promise<{
        id: string;
        email: string;
        phoneNumber: string;
        occupation: string;
        country: string;
        socialMediaHandles: string[];
        fullName: string;
        name: string;
        password: string;
        refreshToken: string;
        avatar: string;
        isUserBan: boolean;
        isAdmin: boolean;
        isVendor: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    changePassword(req: any, changePasswordDto: ChangePasswordDto): Promise<{
        message: string;
    }>;
    getUserAddresses(req: any): Promise<{
        id: string;
        type: import(".prisma/client").$Enums.AddressType;
        firstName: string;
        lastName: string;
        company: string;
        addressLine1: string;
        addressLine2: string;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        phone: string;
        isDefault: boolean;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
    }[]>;
    addAddress(req: any, createAddressDto: CreateAddressDto): Promise<{
        id: string;
        type: import(".prisma/client").$Enums.AddressType;
        firstName: string;
        lastName: string;
        company: string;
        addressLine1: string;
        addressLine2: string;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        phone: string;
        isDefault: boolean;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
    }>;
    updateAddress(req: any, addressId: string, updateAddressDto: UpdateAddressDto): Promise<{
        id: string;
        type: import(".prisma/client").$Enums.AddressType;
        firstName: string;
        lastName: string;
        company: string;
        addressLine1: string;
        addressLine2: string;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        phone: string;
        isDefault: boolean;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
    }>;
    removeAddress(req: any, addressId: string): Promise<{
        message: string;
    }>;
    setDefaultAddress(req: any, addressId: string): Promise<{
        id: string;
        type: import(".prisma/client").$Enums.AddressType;
        firstName: string;
        lastName: string;
        company: string;
        addressLine1: string;
        addressLine2: string;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        phone: string;
        isDefault: boolean;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
    }>;
}
